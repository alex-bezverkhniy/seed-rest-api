basePath: /api
definitions:
  user.ResponseHTTP:
    properties:
      data:
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  user.User:
    properties:
      address:
        type: string
      created:
        type: integer
      id:
        type: integer
      modified:
        type: integer
      name:
        type: string
    type: object
info:
  contact:
    email: alexandr.bezverkhniy@gmail.com
    name: Alex Bezverkhniy
  description: This is Seed REST API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: API
  version: "1.0"
paths:
  /v1/users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/user.User'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Creates new user
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
      summary: Creates new user
      tags:
      - user
  /v1/users/{userId}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/user.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/user.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/user.ResponseHTTP'
      summary: Get user by ID
      tags:
      - user
swagger: "2.0"
